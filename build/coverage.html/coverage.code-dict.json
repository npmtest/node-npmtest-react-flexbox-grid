{"/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/test.js":"/* istanbul instrument in package npmtest_react_flexbox_grid */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/lib.npmtest_react_flexbox_grid.js":"/* istanbul instrument in package npmtest_react_flexbox_grid */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_flexbox_grid = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_flexbox_grid = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-flexbox-grid && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_flexbox_grid */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_flexbox_grid\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_flexbox_grid.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_flexbox_grid.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_flexbox_grid.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_flexbox_grid.__dirname + '/lib.npmtest_react_flexbox_grid.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/lib/index.js":"'use strict';\n\nexports.__esModule = true;\nexports.getColumnProps = exports.Col = exports.getRowProps = exports.Row = exports.Grid = undefined;\n\nvar _Row2 = require('./components/Row');\n\nObject.defineProperty(exports, 'getRowProps', {\n  enumerable: true,\n  get: function get() {\n    return _Row2.getRowProps;\n  }\n});\n\nvar _Col2 = require('./components/Col');\n\nObject.defineProperty(exports, 'getColumnProps', {\n  enumerable: true,\n  get: function get() {\n    return _Col2.getColumnProps;\n  }\n});\n\nvar _Grid2 = require('./components/Grid');\n\nvar _Grid3 = _interopRequireDefault(_Grid2);\n\nvar _Row3 = _interopRequireDefault(_Row2);\n\nvar _Col3 = _interopRequireDefault(_Col2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Grid = _Grid3.default;\nexports.Row = _Row3.default;\nexports.Col = _Col3.default;","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/lib/components/Row.js":"'use strict';\n\nexports.__esModule = true;\nexports.getRowProps = getRowProps;\nexports.default = Row;\n\nvar _classNames = require('../classNames');\n\nvar _classNames2 = _interopRequireDefault(_classNames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createProps = require('../createProps');\n\nvar _createProps2 = _interopRequireDefault(_createProps);\n\nvar _types = require('../types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar rowKeys = ['start', 'center', 'end', 'top', 'middle', 'bottom', 'around', 'between'];\n\nvar propTypes = {\n  reverse: _react.PropTypes.bool,\n  start: _types.ViewportSizeType,\n  center: _types.ViewportSizeType,\n  end: _types.ViewportSizeType,\n  top: _types.ViewportSizeType,\n  middle: _types.ViewportSizeType,\n  bottom: _types.ViewportSizeType,\n  around: _types.ViewportSizeType,\n  between: _types.ViewportSizeType,\n  className: _react.PropTypes.string,\n  tagName: _react.PropTypes.string,\n  children: _react.PropTypes.node\n};\n\nfunction getRowClassNames(props) {\n  var modificators = [props.className, (0, _classNames2.default)('row')];\n\n  for (var i = 0; i < rowKeys.length; ++i) {\n    var key = rowKeys[i];\n    var value = props[key];\n    if (value) {\n      modificators.push((0, _classNames2.default)(key + '-' + value));\n    }\n  }\n\n  if (props.reverse) {\n    modificators.push((0, _classNames2.default)('reverse'));\n  }\n\n  return modificators;\n}\n\nfunction getRowProps(props) {\n  return (0, _createProps2.default)(propTypes, props, getRowClassNames(props));\n}\n\nfunction Row(props) {\n  return _react2.default.createElement(props.tagName || 'div', getRowProps(props));\n}\n\nRow.propTypes = propTypes;","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/lib/classNames.js":"'use strict';\n\nexports.__esModule = true;\nexports.default = getClass;\n\nvar _flexboxgrid = require('flexboxgrid/dist/flexboxgrid.css');\n\nvar _flexboxgrid2 = _interopRequireDefault(_flexboxgrid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getClass(className) {\n  return _flexboxgrid2.default && _flexboxgrid2.default[className] ? _flexboxgrid2.default[className] : className;\n}","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/karma.conf.js":"const webpackConfig = require('./webpack.config.test');\n\nmodule.exports = function karmaConfig(config) {\n  config.set({\n    browsers: ['PhantomJS'],\n    singleRun: true,\n    frameworks: ['mocha'],\n    files: [\n      './node_modules/babel-polyfill/browser.js',\n      'tests.webpack.js',\n      'test/reactErrors.js'\n    ],\n    reporters: ['dots'],\n    preprocessors: {'tests.webpack.js': ['webpack']},\n    webpack: webpackConfig,\n    webpackServer: {\n      noInfo: true\n    }\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/webpack.config.test.js":"const webpack = require('webpack');\nconst autoprefixer = require('autoprefixer');\n\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n        exclude: /(node_modules)/,\n        loader: 'babel'\n      }, {\n        test: /(\\.scss|\\.css)$/,\n        loader: 'style!css?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!postcss!sass'\n      }\n    ]\n  },\n  resolve: {\n    extensions: ['', '.scss', '.js', '.json']\n  },\n  watch: true,\n  postcss: [autoprefixer],\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env.NODE_ENV': JSON.stringify('test')\n    })\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/server.js":"const path = require('path');\nconst express = require('express');\nconst webpack = require('webpack');\nconst config = require('./webpack.config.development');\nconst port = 8080;\n\nconst app = express();\nconst compiler = webpack(config);\n\n\napp.use(require('webpack-dev-middleware')(compiler, {\n  publicPath: config.output.publicPath,\n  stats: {\n    colors: true\n  }\n}));\n\napp.use(require('webpack-hot-middleware')(compiler));\n\napp.get('*', (req, resp) => {\n  resp.sendFile(path.join(__dirname, './spec/index.html'));\n});\n\napp.listen(port, '0.0.0.0', (err) => {\n  if (err) {\n    console.log(err);\n    return;\n  }\n\n  console.log(path.join(__dirname, './spec/index.html'));\n\n  console.log('Listening at http://0.0.0.0:' + port);\n});\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/webpack.config.development.js":"const pkg = require('./package');\nconst webpack = require('webpack');\nconst path = require('path');\nconst autoprefixer = require('autoprefixer');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\n\nmodule.exports = {\n  context: __dirname,\n  devtool: 'inline-source-map',\n  entry: [\n    'webpack-hot-middleware/client',\n    './spec/index.js'\n  ],\n  output: {\n    path: path.join(__dirname, 'build'),\n    publicPath: '/build/',\n    filename: 'spec.js'\n  },\n  resolve: {\n    extensions: ['', '.js', '.scss', '.json']\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n        exclude: /(node_modules)/,\n        loader: 'babel'\n      },\n      {\n        test: /(\\.scss|\\.css)$/,\n        loader: ExtractTextPlugin.extract('style-loader', 'css?sourceMap&modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!postcss!sass?sourceMap')\n      }\n    ]\n  },\n  postcss: [autoprefixer],\n  plugins: [\n    new ExtractTextPlugin('spec.css', {allChunks: true}),\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NoErrorsPlugin(),\n    new webpack.DefinePlugin({\n      'process.env.NODE_ENV': JSON.stringify('development'),\n      VERSION: JSON.stringify(pkg.version)\n    })\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/lib/createProps.js":"'use strict';\n\nexports.__esModule = true;\nexports.default = createProps;\nfunction createProps(propTypes, props, classNames) {\n  var newProps = {};\n\n  Object.keys(props).filter(function (key) {\n    return key === 'children' || !propTypes[key];\n  }).forEach(function (key) {\n    return newProps[key] = props[key];\n  });\n\n  var className = classNames.filter(function (cn) {\n    return cn;\n  }).join(' ');\n  return Object.assign({}, newProps, { className: className });\n}","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/lib/types.js":"'use strict';\n\nexports.__esModule = true;\nexports.ViewportSizeType = exports.ColumnSizeType = undefined;\n\nvar _react = require('react');\n\nvar ColumnSizeType = exports.ColumnSizeType = _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.bool]);\nvar ViewportSizeType = exports.ViewportSizeType = _react.PropTypes.oneOf(['xs', 'sm', 'md', 'lg']);","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/src/classNames.js":"import styles from 'flexboxgrid/dist/flexboxgrid.css';\n\nexport default function getClass(className) {\n  return (styles && styles[className]) ? styles[className] : className;\n}\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/src/index.js":"export Grid from './components/Grid';\nexport Row, { getRowProps } from './components/Row';\nexport Col, { getColumnProps } from './components/Col';\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/lib/components/Col.js":"'use strict';\n\nexports.__esModule = true;\nexports.getColumnProps = getColumnProps;\nexports.default = Col;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createProps = require('../createProps');\n\nvar _createProps2 = _interopRequireDefault(_createProps);\n\nvar _classNames = require('../classNames');\n\nvar _classNames2 = _interopRequireDefault(_classNames);\n\nvar _types = require('../types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar propTypes = {\n  xs: _types.ColumnSizeType,\n  sm: _types.ColumnSizeType,\n  md: _types.ColumnSizeType,\n  lg: _types.ColumnSizeType,\n  xsOffset: _react.PropTypes.number,\n  smOffset: _react.PropTypes.number,\n  mdOffset: _react.PropTypes.number,\n  lgOffset: _react.PropTypes.number,\n  first: _types.ViewportSizeType,\n  last: _types.ViewportSizeType,\n  className: _react.PropTypes.string,\n  tagName: _react.PropTypes.string,\n  children: _react.PropTypes.node\n};\n\nvar classMap = {\n  xs: 'col-xs',\n  sm: 'col-sm',\n  md: 'col-md',\n  lg: 'col-lg',\n  xsOffset: 'col-xs-offset',\n  smOffset: 'col-sm-offset',\n  mdOffset: 'col-md-offset',\n  lgOffset: 'col-lg-offset'\n};\n\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction getColClassNames(props) {\n  var extraClasses = [];\n\n  if (props.className) {\n    extraClasses.push(props.className);\n  }\n\n  if (props.first) {\n    extraClasses.push((0, _classNames2.default)('first-' + props.first));\n  }\n\n  if (props.last) {\n    extraClasses.push((0, _classNames2.default)('last-' + props.last));\n  }\n\n  return Object.keys(props).filter(function (key) {\n    return classMap[key];\n  }).map(function (key) {\n    return (0, _classNames2.default)(isInteger(props[key]) ? classMap[key] + '-' + props[key] : classMap[key]);\n  }).concat(extraClasses);\n}\n\nfunction getColumnProps(props) {\n  return (0, _createProps2.default)(propTypes, props, getColClassNames(props));\n}\n\nfunction Col(props) {\n  var tagName = props.tagName,\n      columnProps = _objectWithoutProperties(props, ['tagName']);\n\n  return _react2.default.createElement(tagName || 'div', getColumnProps(columnProps));\n}\n\nCol.propTypes = propTypes;","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/lib/components/Grid.js":"'use strict';\n\nexports.__esModule = true;\nexports.default = Grid;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createProps = require('../createProps');\n\nvar _createProps2 = _interopRequireDefault(_createProps);\n\nvar _classNames = require('../classNames');\n\nvar _classNames2 = _interopRequireDefault(_classNames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = {\n  fluid: _react.PropTypes.bool,\n  className: _react.PropTypes.string,\n  tagName: _react.PropTypes.string,\n  children: _react.PropTypes.node\n};\n\nfunction Grid(props) {\n  var containerClass = (0, _classNames2.default)(props.fluid ? 'container-fluid' : 'container');\n  var classNames = [props.className, containerClass];\n\n  return _react2.default.createElement(props.tagName || 'div', (0, _createProps2.default)(propTypes, props, classNames));\n}\n\nGrid.propTypes = propTypes;","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/src/components/Col.js":"import React, { PropTypes } from 'react';\nimport createProps from '../createProps';\nimport getClass from '../classNames';\nimport { ColumnSizeType, ViewportSizeType } from '../types';\n\nconst propTypes = {\n  xs: ColumnSizeType,\n  sm: ColumnSizeType,\n  md: ColumnSizeType,\n  lg: ColumnSizeType,\n  xsOffset: PropTypes.number,\n  smOffset: PropTypes.number,\n  mdOffset: PropTypes.number,\n  lgOffset: PropTypes.number,\n  first: ViewportSizeType,\n  last: ViewportSizeType,\n  className: PropTypes.string,\n  tagName: PropTypes.string,\n  children: PropTypes.node\n};\n\nconst classMap = {\n  xs: 'col-xs',\n  sm: 'col-sm',\n  md: 'col-md',\n  lg: 'col-lg',\n  xsOffset: 'col-xs-offset',\n  smOffset: 'col-sm-offset',\n  mdOffset: 'col-md-offset',\n  lgOffset: 'col-lg-offset'\n};\n\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction getColClassNames(props) {\n  const extraClasses = [];\n\n  if (props.className) {\n    extraClasses.push(props.className);\n  }\n\n  if (props.first) {\n    extraClasses.push(getClass('first-' + props.first));\n  }\n\n  if (props.last) {\n    extraClasses.push(getClass('last-' + props.last));\n  }\n\n  return Object.keys(props)\n    .filter(key => classMap[key])\n    .map(key => getClass(isInteger(props[key]) ? (classMap[key] + '-' + props[key]) : classMap[key]))\n    .concat(extraClasses);\n}\n\nexport function getColumnProps(props) {\n  return createProps(propTypes, props, getColClassNames(props));\n}\n\nexport default function Col(props) {\n  const { tagName, ...columnProps } = props;\n  return React.createElement(tagName || 'div', getColumnProps(columnProps));\n}\n\nCol.propTypes = propTypes;\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/src/components/Grid.js":"import React, { PropTypes } from 'react';\nimport createProps from '../createProps';\nimport getClass from '../classNames';\n\nconst propTypes = {\n  fluid: PropTypes.bool,\n  className: PropTypes.string,\n  tagName: PropTypes.string,\n  children: PropTypes.node\n};\n\nexport default function Grid(props) {\n  const containerClass = getClass(props.fluid ? 'container-fluid' : 'container');\n  const classNames = [props.className, containerClass];\n\n  return React.createElement(props.tagName || 'div', createProps(propTypes, props, classNames));\n}\n\nGrid.propTypes = propTypes;\n","/home/travis/build/npmtest/node-npmtest-react-flexbox-grid/node_modules/react-flexbox-grid/src/components/Row.js":"import getClass from '../classNames';\nimport React, { PropTypes } from 'react';\nimport createProps from '../createProps';\nimport { ViewportSizeType } from '../types';\n\nconst rowKeys = ['start', 'center', 'end', 'top', 'middle', 'bottom', 'around', 'between'];\n\nconst propTypes = {\n  reverse: PropTypes.bool,\n  start: ViewportSizeType,\n  center: ViewportSizeType,\n  end: ViewportSizeType,\n  top: ViewportSizeType,\n  middle: ViewportSizeType,\n  bottom: ViewportSizeType,\n  around: ViewportSizeType,\n  between: ViewportSizeType,\n  className: PropTypes.string,\n  tagName: PropTypes.string,\n  children: PropTypes.node\n};\n\nfunction getRowClassNames(props) {\n  const modificators = [props.className, getClass('row')];\n\n  for (let i = 0; i < rowKeys.length; ++i) {\n    const key = rowKeys[i];\n    const value = props[key];\n    if (value) {\n      modificators.push(getClass(`${key}-${value}`));\n    }\n  }\n\n  if (props.reverse) {\n    modificators.push(getClass('reverse'));\n  }\n\n  return modificators;\n}\n\nexport function getRowProps(props) {\n  return createProps(propTypes, props, getRowClassNames(props));\n}\n\nexport default function Row(props) {\n  return React.createElement(props.tagName || 'div', getRowProps(props));\n}\n\nRow.propTypes = propTypes;\n"}